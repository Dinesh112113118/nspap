import React, { useState, useEffect } from 'react';
import { useAuth } from '../contexts/AuthContext';
import { AlertIcon } from './icons';
import NotificationsPanel from './NotificationsPanel';
import { getMockNotifications } from '../services/mockData';
import type { Notification } from '../types';

const Header: React.FC = () => {
  const { user } = useAuth();
  const [isPanelOpen, setIsPanelOpen] = useState(false);
  const [notifications, setNotifications] = useState<Notification[]>([]);

  useEffect(() => {
    setNotifications(getMockNotifications());
  }, []);

  const unreadCount = notifications.filter(n => !n.read).length;

  return (
    <>
      <header className="flex-shrink-0 h-20 bg-gray-900/50 backdrop-blur-sm border-b border-gray-700/60 flex items-center justify-between px-8 z-20 relative">
        <div>
          <h1 className="text-xl font-semibold text-white">Welcome, Commander {user?.name || 'Guest'}! ðŸ‘‹</h1>
          <p className="text-sm text-gray-400">Mission parameters: Monitor air quality and maintain peak performance.</p>
        </div>
        <div className="flex items-center space-x-6">
          <button onClick={() => setIsPanelOpen(true)} className="relative text-gray-400 hover:text-white cursor-pointer focus:outline-none">
            <AlertIcon className="w-6 h-6" />
            {unreadCount > 0 && (
              <span className="absolute -top-1 -right-1 flex h-5 w-5 items-center justify-center rounded-full bg-red-500 text-xs font-bold text-white ring-2 ring-gray-800">
                {unreadCount}
              </span>
            )}
          </button>
          <div className="flex items-center">
              <img src={`https://api.dicebear.com/8.x/initials/svg?seed=${user?.name || 'A'}`} alt={user?.name || 'User'} className="w-11 h-11 rounded-full object-cover border-2 border-gray-600 bg-gray-700"/>
              <div className="ml-3">
                  <p className="text-sm font-medium text-white">{user?.name || 'User'}</p>
                  <p className="text-xs text-gray-400">{user?.email || 'user@example.com'}</p>
              </div>
          </div>
        </div>
      </header>
      <NotificationsPanel 
        isOpen={isPanelOpen} 
        onClose={() => setIsPanelOpen(false)}
        notifications={notifications}
        setNotifications={setNotifications}
      />
    </>
  );
};

export default Header;
