import React, { useState } from 'react';
import { authService } from '../services/authService';

interface RegisterPageProps {
    onSwitchToLogin: () => void;
}

const RegisterPage: React.FC<RegisterPageProps> = ({ onSwitchToLogin }) => {
    const [name, setName] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [location, setLocation] = useState('');
    const [primaryActivity, setPrimaryActivity] = useState<'Running' | 'Cycling' | 'Hiking'>('Running');
    const [error, setError] = useState('');
    const [success, setSuccess] = useState('');
    const [isLoading, setIsLoading] = useState(false);

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        setError('');
        setSuccess('');
        setIsLoading(true);
        try {
            await authService.register(name, email, password, location, primaryActivity);
            setSuccess('Registration successful! Please log in to continue.');
            // Clear form
            setName('');
            setEmail('');
            setPassword('');
            setLocation('');
            setPrimaryActivity('Running');
        } catch (err) {
             setError(err instanceof Error ? err.message : 'An unknown error occurred.');
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <div className="flex items-center justify-center min-h-screen bg-gray-900 p-4">
            <div className="w-full max-w-md animate-fade-in">
                 <div className="text-center mb-8">
                    <svg className="w-16 h-16 text-blue-500 mx-auto" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12 2L2 7l10 5 10-5-10-5z" stroke="currentColor" strokeWidth="1.5"/>
                        <path opacity="0.6" d="M2 17l10 5 10-5" stroke="currentColor" strokeWidth="1.5"/>
                        <path opacity="0.6" d="M2 12l10 5 10-5" stroke="currentColor" strokeWidth="1.5"/>
                    </svg>
                    <h1 className="text-4xl font-bold text-gray-100 tracking-wider mt-2">AETHERFIT</h1>
                    <p className="text-gray-400">New Commander Registration</p>
                </div>

                <div className="bg-gray-900/60 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-8 shadow-2xl">
                    <form onSubmit={handleSubmit} className="space-y-4">
                        <div>
                            <label className="block text-sm font-medium text-gray-400">Commander Name</label>
                            <input
                                type="text"
                                value={name}
                                onChange={(e) => setName(e.target.value)}
                                className="mt-1 block w-full bg-gray-800 border border-gray-600 rounded-md shadow-sm py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 transition-all duration-300"
                                required
                            />
                        </div>
                        <div>
                            <label className="block text-sm font-medium text-gray-400">Email Address</label>
                            <input
                                type="email"
                                value={email}
                                onChange={(e) => setEmail(e.target.value)}
                                className="mt-1 block w-full bg-gray-800 border border-gray-600 rounded-md shadow-sm py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 transition-all duration-300"
                                required
                            />
                        </div>
                        
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label className="block text-sm font-medium text-gray-400">Home Location</label>
                                <input
                                    type="text"
                                    value={location}
                                    onChange={(e) => setLocation(e.target.value)}
                                    className="mt-1 block w-full bg-gray-800 border border-gray-600 rounded-md shadow-sm py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 transition-all duration-300"
                                    required
                                    placeholder="e.g., San Francisco, CA"
                                />
                            </div>
                            <div>
                                <label className="block text-sm font-medium text-gray-400">Primary Activity</label>
                                <select
                                    value={primaryActivity}
                                    onChange={(e) => setPrimaryActivity(e.target.value as any)}
                                    className="mt-1 block w-full bg-gray-800 border border-gray-600 rounded-md shadow-sm py-2.5 px-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 transition-all duration-300"
                                >
                                    <option>Running</option>
                                    <option>Cycling</option>
                                    <option>Hiking</option>
                                </select>
                            </div>
                        </div>

                        <div>
                            <label className="block text-sm font-medium text-gray-400">Password</label>
                            <input
                                type="password"
                                value={password}
                                onChange={(e) => setPassword(e.target.value)}
                                className="mt-1 block w-full bg-gray-800 border border-gray-600 rounded-md shadow-sm py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 transition-all duration-300"
                                required
                                placeholder="Min. 6 characters"
                            />
                        </div>

                        {error && <p className="text-red-400 text-sm bg-red-900/30 p-3 rounded-md border border-red-500/50">{error}</p>}
                        {success && <p className="text-green-300 text-sm bg-green-900/30 p-3 rounded-md border border-green-500/50">{success}</p>}

                        <div className="pt-2">
                            <button
                                type="submit"
                                disabled={isLoading}
                                className="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-blue-500 disabled:opacity-50 transition-colors"
                            >
                                {isLoading ? 'Processing...' : 'Register'}
                            </button>
                        </div>
                    </form>
                    <p className="mt-6 text-center text-sm text-gray-400">
                        Already have an account?{' '}
                        <button onClick={onSwitchToLogin} className="font-medium text-blue-400 hover:text-blue-300">
                            Log In
                        </button>
                    </p>
                </div>
            </div>
        </div>
    );
};

export default RegisterPage;
